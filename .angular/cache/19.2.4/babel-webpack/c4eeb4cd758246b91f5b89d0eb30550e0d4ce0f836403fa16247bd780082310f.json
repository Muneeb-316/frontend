{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProjectListComponent } from './components/project-list/project-list.component';\nimport { ProjectDetailsComponent } from './components/project-details/project-details.component';\nimport { SettingsComponent } from './components/settings/settings.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { GuestGuard } from './guards/guest.guard';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: '',\n  redirectTo: '/login',\n  pathMatch: 'full'\n}, {\n  path: 'login',\n  component: LoginComponent,\n  canActivate: [GuestGuard] // Prevent logged-in users from accessing login\n}, {\n  path: 'dashboard',\n  component: DashboardComponent,\n  canActivate: [AuthGuard] // Requires authentication\n}, {\n  path: 'projects',\n  component: ProjectListComponent,\n  canActivate: [AuthGuard] // Requires authentication\n}, {\n  path: 'projects/:id',\n  component: ProjectDetailsComponent,\n  canActivate: [AuthGuard] // Requires authentication\n}, {\n  path: 'settings',\n  component: SettingsComponent,\n  canActivate: [AuthGuard] // Requires authentication\n},\n// Add a wildcard route for 404 handling\n{\n  path: '**',\n  redirectTo: '/login'\n}];\nexport class AppRoutingModule {\n  static ɵfac = function AppRoutingModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || AppRoutingModule)();\n  };\n  static ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppRoutingModule\n  });\n  static ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [RouterModule.forRoot(routes), RouterModule]\n  });\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["RouterModule","DashboardComponent","ProjectListComponent","ProjectDetailsComponent","SettingsComponent","LoginComponent","AuthGuard","GuestGuard","routes","path","redirectTo","pathMatch","component","canActivate","AppRoutingModule","forRoot","imports","i1","exports"],"sources":["F:\\muneeb's\\construction-proj-master\\ang-app\\src\\app\\app-routing.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProjectListComponent } from './components/project-list/project-list.component';\nimport { ProjectDetailsComponent } from './components/project-details/project-details.component';\nimport { SettingsComponent } from './components/settings/settings.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { GuestGuard } from './guards/guest.guard';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\n  { \n    path: 'login', \n    component: LoginComponent,\n    canActivate: [GuestGuard]  // Prevent logged-in users from accessing login\n  },\n  { \n    path: 'dashboard', \n    component: DashboardComponent,\n    canActivate: [AuthGuard]  // Requires authentication\n  },\n  { \n    path: 'projects', \n    component: ProjectListComponent,\n    canActivate: [AuthGuard]  // Requires authentication\n  },\n  { \n    path: 'projects/:id', \n    component: ProjectDetailsComponent,\n    canActivate: [AuthGuard]  // Requires authentication\n  },\n  { \n    path: 'settings', \n    component: SettingsComponent,\n    canActivate: [AuthGuard]  // Requires authentication\n  },\n  // Add a wildcard route for 404 handling\n  { path: '**', redirectTo: '/login' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }"],"mappings":"AACA,SAASA,YAAY,QAAgB,iBAAiB;AACtD,SAASC,kBAAkB,QAAQ,4CAA4C;AAC/E,SAASC,oBAAoB,QAAQ,kDAAkD;AACvF,SAASC,uBAAuB,QAAQ,wDAAwD;AAChG,SAASC,iBAAiB,QAAQ,0CAA0C;AAC5E,SAASC,cAAc,QAAQ,oCAAoC;AACnE,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,UAAU,QAAQ,sBAAsB;;;AAEjD,MAAMC,MAAM,GAAW,CACrB;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE,QAAQ;EAAEC,SAAS,EAAE;AAAM,CAAE,EACrD;EACEF,IAAI,EAAE,OAAO;EACbG,SAAS,EAAEP,cAAc;EACzBQ,WAAW,EAAE,CAACN,UAAU,CAAC,CAAE;CAC5B,EACD;EACEE,IAAI,EAAE,WAAW;EACjBG,SAAS,EAAEX,kBAAkB;EAC7BY,WAAW,EAAE,CAACP,SAAS,CAAC,CAAE;CAC3B,EACD;EACEG,IAAI,EAAE,UAAU;EAChBG,SAAS,EAAEV,oBAAoB;EAC/BW,WAAW,EAAE,CAACP,SAAS,CAAC,CAAE;CAC3B,EACD;EACEG,IAAI,EAAE,cAAc;EACpBG,SAAS,EAAET,uBAAuB;EAClCU,WAAW,EAAE,CAACP,SAAS,CAAC,CAAE;CAC3B,EACD;EACEG,IAAI,EAAE,UAAU;EAChBG,SAAS,EAAER,iBAAiB;EAC5BS,WAAW,EAAE,CAACP,SAAS,CAAC,CAAE;CAC3B;AACD;AACA;EAAEG,IAAI,EAAE,IAAI;EAAEC,UAAU,EAAE;AAAQ,CAAE,CACrC;AAMD,OAAM,MAAOI,gBAAgB;;qCAAhBA,gBAAgB;EAAA;;UAAhBA;EAAgB;;cAHjBd,YAAY,CAACe,OAAO,CAACP,MAAM,CAAC,EAC5BR,YAAY;EAAA;;;2EAEXc,gBAAgB;IAAAE,OAAA,GAAAC,EAAA,CAAAjB,YAAA;IAAAkB,OAAA,GAFjBlB,YAAY;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}